✔ Start @done(22-07-15 08:51)
- Iniciar Projeto (npm init)
- Instalar as bibliotecas (express/nodemon)
- Adicionar pasta .gitignore e colocar node_modules
- Instalar express-generator para estrutura do projeto (npm install -g express-generator)
     - Criar Estrutura (express --view=ejs myapp)
- Colocar nodemon para dev com ("scripts"{ "dev": "nodemon ./bin/www"})

✔ Desenvolvendo as Paginas (html/CSS) @done(22-07-15 08:51)

    - Views 
    - login
    - registro
    - resetSenha
    - homePage
    - admPage
    - comentsPage
    - ContentPage
    - sobreNos

✔ Desenvolvendo o Banco de dados (Sequelize) @done(22-07-15 08:51)
    
    - Configurando as medidas do Sequelize
        - Instalar o sequelize(npm i sequelize)
            - Criar arquivo .sequelizerc e passar os path
            - Iniciar o sequelize
        - Instalar o dotenv (npm install dotenv)
            - Configurar config com a dotenv
            - Criar o .env e envia-lo para o .gitignore
            - Criar o .env.example

✔ Criando as migrations/ Models/ Seeders @done(22-07-17 17:32)

    - Criar o bando de dados (npx sequelize db:create --name)
        ele ira puxar do .env o nome da tabela que deixou lá em DBNAME
    - Criar as migrations (users/comentarios) e executa-lás (npx sequelize db:migrate) executando as tabelas no DB
        Criando a estrutura dos campos das tabelas     
    - Criar as Models (Users/ Comentarios)

    - Criar seeders (npx sequelize seeders:create --name) e executar (npx sequelize db:seeders)
        Fazer a estrutura que vai popular as tabelas no DB 
    - Instalar a biblioteca (bcrypt) e usar nas aplicações

    - Atualizar tabelas users 
        Modificado a coluna de telefone (Allownull: True)



✔ Definindo as rotas (express) @done(22-07-20 20:15)
    Há terminar
    - Rotas
    - router.get('/login',AuthController.showLogin);
    - router.get('/registro', AuthController.showRegistro);
    - router.get('/resetSenha', AuthController.showResetSenha);
    - router.get('/homePage', isLogin,AuthController.showHomePage);
    - router.post('/homePage',isLogin,UserController.createStudio)
    - router.post('/login',AuthController.Login);
    - router.post('/registro', AuthController.Registrar);
    - router.get('/editPage', isLogin,UserController.showEditPage);
    - router.put('/editPage', isLogin,UserController.editUser);
    - router.get('/contentPage', isLogin,UserController.showContentPage);

✔ Incluindo EJS no Header e Footer nas Paginas @done(22-07-20 20:15)

    - editPage
    - ContentPage
    - comentsPage

✔ Criar Controllers @done(22-07-20 20:32)

    - Bibliotecas necessárias
        - express-session 
        app.use(session({
            secret:"segredo",
            resave: false,
            saveUninitialized: false
            }))
        - method-override 
        app.use(methodOverride('_method'));

    - AuthController 
    - UserController

☐ Criar Middlerwares 
    há terminar 

    


        
    